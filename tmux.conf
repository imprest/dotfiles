# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

set -g clock-mode-style 12

# Renumber windows after removing one
set -g renumber-windows on

# Make Vim responsive to esc
set -s escape-time 0

# Keep plenty of history for scrollback
set -g history-limit 10000

# mouse
set -g mouse on

# Copy-mode i.e. scrollback mode
bind C-[ copy-mode

# Quick Gitsh
bind g split-window -c "#{pane_current_path}" -h -p 50 'gitsh'

# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set-option -g status-keys "emacs"

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Easy rotating of panes
bind C-k swap-pane -U

# Show pane numbers for half a second
set -g display-panes-time 300

# Binding to toggle synchronize panes
is_synched='[[ $(tmux show-window-options -v synchronize-panes) == "on" ]]'
bind-key S if-shell "$is_synched" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

# Simplify status bar display
#set -g status-bg '#666666'
#set -g status-fg '#aaaaaa'
set -g status-left-length 40
set -g status-left '[#S]'
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(date '+%a, %b %d - %I:%M') "

# Dismiss current pane to background window
bind b break-pane -d
bind-key J command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key p display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# more intuitive keybindings for splitting
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# Make C-j display a selectable list of sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Quick session switching back and forth. I never use the built in layouts
# (default mapping for Space), so I reclaimed the key for this
bind-key Space switch-client -l

# Keep window names as I set them
setw -g automatic-rename on

# The base index for windows and panes to 1 instead of the default 0.
# # Now prefix 1 is the first window instead of a prefix 0 being the first.
set -g base-index 1

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# use 256 colors
set-option -g default-terminal "tmux"
set-option -gs terminal-overrides ",xterm-256color:Tc"

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left  resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down  resize-pane -D 1
bind -n S-Up    resize-pane -U 1
bind -n C-Left  resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down  resize-pane -D 5
bind -n C-Up    resize-pane -U 5
